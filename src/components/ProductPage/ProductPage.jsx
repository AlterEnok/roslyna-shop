// ProductPage.jsx
import React, { useState, useRef, useEffect } from "react";
import "./ProductPage.css";
import Footer from '../../components/Footer/Footer';
import ProductList from "../ProductList/ProductList";
import antivrin1 from "../../assets/antivrin1.png";
import antivrin2 from "../../assets/antivrin2.png";
import product3Img from "../../assets/product3.png";
import product4Img from "../../assets/product4.png";
import star from "../../assets/star.png";

function ProductPage({ addToCart }) {
    const product = {
        id: 1,
        title: "–ê–Ω—Ç–∏–≤–∏—Ä—ñ–Ω",
        subtitle: "–ú—É—Ä–∞—à–∏–Ω–µ –¥–µ—Ä–µ–≤–æ",
        description:
            "–¶–µ –ø—Ä–∏—Ä–æ–¥–Ω–∏–π –ø—Ä–æ—Ç–∏–≤—ñ—Ä—É—Å–Ω–∏–π –∑–∞—Å—ñ–±, —è–∫–∏–π –≤–∏—Ä–æ–±–ª—è—î—Ç—å—Å—è –∫–æ–º–ø–∞–Ω—ñ—î—é ‚Äú–†–æ—Å–ª–∏–Ω–∞ –ö–∞—Ä–ø–∞—Ç‚Äù. –¶–µ–π –ø—Ä–µ–ø–∞—Ä–∞—Ç –º–∞—î —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä –¥—ñ—ó –ø—Ä–æ—Ç–∏ —Ä—ñ–∑–Ω–∏—Ö –≤—ñ—Ä—É—Å—ñ–≤...",
        price: 1290,
        images: [antivrin1, antivrin2],
    };

    const [quantity, setQuantity] = useState(1);
    const [selectedImage, setSelectedImage] = useState(product.images[0]);
    const [isModalOpen, setIsModalOpen] = useState(false);

    // --- –í—ñ–¥–≥—É–∫–∏ ---
    const [reviews, setReviews] = useState([
        { id: 1, user: "–í–∞–ª–µ—Ä—ñ–π –ê–ª—å–±–µ—Ä—Ç–æ–≤–∏—á", text: "–ö–æ—Ä–∏—Å—Ç—É—é—Å—å –≤–∂–µ –≤–¥—Ä—É–≥–µ ‚Äî –≤–æ–ª–æ—Å—Å—è —Å—Ç–∞–ª–æ –∂–∏–≤–∏–º...", date: "20.09.2025" },
        { id: 2, user: "–û–∫—Å–∞–Ω–∞", text: "–ó–∞–º–æ–≤–∏–ª–∞ –≤–ø–µ—Ä—à–µ, –ø—Ä–∏—î–º–Ω–æ –∑–¥–∏–≤–æ–≤–∞–Ω–∞ —à–≤–∏–¥–∫–æ—é –¥–æ—Å—Ç–∞–≤–∫–æ—é...", date: "22.09.2025" },
    ]);

    const [newReview, setNewReview] = useState("");
    const [lastReviewTime, setLastReviewTime] = useState(0);
    const [error, setError] = useState("");
    const listRef = useRef(null);

    const handleAddReview = (e) => {
        e.preventDefault();
        setError("");

        const now = Date.now();

        if (newReview.trim().length < 5) {
            setError("–í—ñ–¥–≥—É–∫ –∑–∞–Ω–∞–¥—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π (–º—ñ–Ω—ñ–º—É–º 5 —Å–∏–º–≤–æ–ª—ñ–≤).");
            return;
        }
        if (newReview.trim().length > 500) {
            setError("–í—ñ–¥–≥—É–∫ –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∏–π (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª—ñ–≤).");
            return;
        }

        if (now - lastReviewTime < 30000) {
            setError("–ú–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∞—Ç–∏ –≤—ñ–¥–≥—É–∫–∏ –Ω–µ —á–∞—Å—Ç—ñ—à–µ –Ω—ñ–∂ —Ä–∞–∑ –Ω–∞ 30 —Å–µ–∫—É–Ω–¥.");
            return;
        }

        const newEntry = {
            id: Date.now(),
            user: "–í–∞—à–µ —ñ–º‚Äô—è (—ñ–∑ –∞–∫–∞—É–Ω—Ç–∞)",
            text: newReview,
            date: new Date().toLocaleDateString(),
        };

        setReviews([...reviews, newEntry]);
        setNewReview("");
        setLastReviewTime(now);
    };

    useEffect(() => {
        if (listRef.current) {
            listRef.current.scrollTop = listRef.current.scrollHeight;
        }
    }, [reviews]);

    const handleAddToCart = () => {
        addToCart({
            id: product.id,
            title: product.title,
            price: product.price,
            image: product.images[0],
            quantity,
        });
    };

    return (
        <>
            <section className="product-page">
                <div className="product-page__container">
                    {/* –ì–∞–ª–µ—Ä–µ—è */}
                    <div className="product-page__gallery">
                        <img
                            src={selectedImage}
                            alt={product.title}
                            className="product-page__main-image"
                            onClick={() => setIsModalOpen(true)}
                        />
                        <div className="product-page__thumbnails">
                            {product.images.map((img, idx) => (
                                <img
                                    key={idx}
                                    src={img}
                                    alt={`${product.title} ${idx + 1}`}
                                    className={`product-page__thumbnail ${selectedImage === img ? "active" : ""}`}
                                    onClick={() => setSelectedImage(img)}
                                />
                            ))}
                        </div>
                    </div>

                    {/* –î–µ—Ç–∞–ª—ñ */}
                    <div className="product-page__details">
                        <h1 className="product-page__title">{product.title}</h1>
                        <h3 className="product-page__subtitle">{product.subtitle}</h3>
                        <p className="product-page__description">{product.description}</p>
                        <p className="product-page__price">{product.price} –≥—Ä–Ω</p>

                        <div className="product-page__quantity">
                            <span>–®–¢</span>
                            <div className="product-page__qty-box">
                                <button
                                    onClick={() => setQuantity(Math.max(1, quantity - 1))}
                                    className="product-page__qty-btn"
                                >
                                    ‚Äì
                                </button>
                                <span className="product-page__qty-value">{quantity}</span>
                                <button
                                    onClick={() => setQuantity(quantity + 1)}
                                    className="product-page__qty-btn"
                                >
                                    +
                                </button>
                            </div>
                        </div>

                        <button className="product-page__button" onClick={handleAddToCart}>
                            –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞
                        </button>
                    </div>
                </div>

                {/* –ú–æ–¥–∞–ª–∫–∞ */}
                {isModalOpen && (
                    <div className="product-page__modal" onClick={() => setIsModalOpen(false)}>
                        <img src={selectedImage} alt="fullscreen" className="product-page__modal-image" />
                    </div>
                )}

                {/* --- –í—ñ–¥–≥—É–∫–∏ --- */}
                <div className="reviews">
                    <div className="reviews__marquee">
                        <div className="reviews__marquee__track">
                            –í—ñ–¥–≥—É–∫–∏ <img src={star} alt="*" /> –í—ñ–¥–≥—É–∫–∏ <img src={star} alt="*" /> –í—ñ–¥–≥—É–∫–∏
                            <img src={star} alt="*" /> –í—ñ–¥–≥—É–∫–∏ <img src={star} alt="*" /> –í—ñ–¥–≥—É–∫–∏
                            <img src={star} alt="*" /> –í—ñ–¥–≥—É–∫–∏ <img src={star} alt="*" />
                        </div>
                    </div>

                    <form onSubmit={handleAddReview} className="reviews__form">
                        <textarea
                            value={newReview}
                            onChange={(e) => setNewReview(e.target.value)}
                            placeholder="–í–≤–µ–¥—ñ—Ç—å –≤—ñ–¥–≥—É–∫ —è–∫–∏–π –ø–æ–±–∞—á–∞—Ç—å –≤—Å—ñ"
                            className="reviews__textarea"
                        />
                        <button type="submit">‚û§</button>
                    </form>
                    {error && <p className="reviews__error">{error}</p>}

                    <div className="reviews__list" ref={listRef}>
                        {reviews.map((review) => (
                            <div key={review.id} className="reviews__card">
                                <strong>{review.user}</strong>
                                <p>{review.text}</p>
                                <span className="reviews__date">{review.date}</span>
                            </div>
                        ))}
                    </div>
                </div>

                <div className="recommendations">
                    <h2 className="recommendations__title">–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –Ω–∞—à—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</h2>
                    <ProductList
                        addToCart={addToCart}
                        isLoggedIn={true}
                        noTitle={true}
                        products={[
                            {
                                id: 101,
                                title: "–ê–Ω—Ç–∏–≤–∏—Ä—ñ–Ω –§–æ—Ä—Ç–µ",
                                subtitle: "–ü–æ—Å–∏–ª–µ–Ω–∞ —Ñ–æ—Ä–º—É–ª–∞",
                                price: 1490,
                                image: antivrin1,
                            },
                            {
                                id: 102,
                                title: "–Ü–º—É–Ω–æ–¢–∞–±",
                                subtitle: "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —ñ–º—É–Ω—ñ—Ç–µ—Ç—É",
                                price: 1790,
                                image: antivrin1,
                            },
                            {
                                id: 103,
                                title: "–§—ñ—Ç–æ—Ç–∞–± –û–±–ª—ñ–ø–∏—Ö–∞",
                                subtitle: "–í—ñ—Ç–∞–º—ñ–Ω–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å",
                                price: 1990,
                                image: product3Img,
                            },
                            {
                                id: 104,
                                title: "–ö–∞—Ä–ø–∞—Ç—Å—å–∫–∏–π –±–∞–ª—å–∑–∞–º",
                                subtitle: "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –µ–Ω–µ—Ä–≥—ñ—è",
                                price: 1890,
                                image: product4Img,
                            },
                        ]}
                    />
                </div>
            </section>

            {/* üî• –§—É—Ç–µ—Ä –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É */}
            <Footer />
        </>
    );
}

export default ProductPage;
